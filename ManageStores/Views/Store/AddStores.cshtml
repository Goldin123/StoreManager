@model ManageStoresModel.StoreUpload

@{
    ViewBag.Title = "AddStores";
    Layout = "~/Views/Shared/_Internal.cshtml";
}

<h2>Stores &nbsp;&nbsp;</h2>
<section class="content">
    <div class="container-fluid">
        <br />
        <div class="info-box">
            <span class="info-box-icon bg-info"><i class="far fa-bell" style="color: #eff0f0;"></i></span>
            <div class="info-box-content">
                <span class="info-box-number">Stores Information</span>
                <span class="info-box-text">Please make sure you select the correct file type depending on the file you are uploading.</span>
                <span class="info-box-text">Only <b>CSV</b>, <b>Json</b> and <b>XML</b> file types are allowed.</span>
                <span class="info-box-text">Make use of the template to verify the file structures.</span>
            </div>
            <!-- /.info-box-content -->
        </div>
        @if (TempData["UploadStatus"] != null)
        {
            var msg = TempData["UploadStatus"].ToString();
            <br />
            <div class="info-box">
                <span class="info-box-icon bg-success"><i class="far fa-thumbs-up"></i></span>

                <div class="info-box-content">
                    <span class="info-box-text">@msg</span>
                </div>
            </div>
        }
        @if (TempData["UploadError"] != null)
        {
            var msg = TempData["UploadError"].ToString();
            <br />
            <div class="info-box">
                <span class="info-box-icon bg-danger"><i class="far fa-thumbs-down"></i></span>

                <div class="info-box-content">
                    <span class="info-box-text">Error</span>
                    <span class="info-box-number">@msg</span>
                </div>
                <!-- /.info-box-content -->
            </div>
        }
        <br />
        <div class="row">
            <div>
                @using (Html.BeginForm("AddStoresToInventory", "Store", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken();
                    <div class="card">
                        <div class="card-header">
                            <h3 class="card-title">Add Stores</h3>
                        </div>
                        <div class="card-body">
                            <div>

                                <div class="form-group">
                                    <label>File Type</label>
                                    @Html.DropDownListFor(a => a.FileType, ManageStores.Helpers.DropDownItems.FileType(), new { @class = "custom-select", type = "text" })
                                    <span>
                                        ( @Html.ActionLink("Download CSV Template", "DownloadTemplate", new { Id = "1" }) )
                                        ( @Html.ActionLink("Download Json Template", "DownloadTemplate", new { Id = "2" }) )
                                        ( @Html.ActionLink("Download XML Template", "DownloadTemplate", new { Id = "3" }) )
                                    </span>
                                </div>
                                <div class="form-group">
                                    <label>File</label><br />
                                    <input type="file" id="File" name="File" />
                                    @Html.ValidationMessageFor(m => m.File, null, new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <button class="btn btn-primary" type="submit">Submit</button>&nbsp;&nbsp; @Html.ActionLink("View Stores", "Index", "Store", new object { }, new { @class = "btn btn-warning" })
                        </div>
                    </div>
                }
            </div>
        </div>

    </div>
</section>